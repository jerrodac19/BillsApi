// <auto-generated />
using System;
using BillsApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BillsApi.Migrations
{
    [DbContext(typeof(BillsApiContext))]
    partial class BillsApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BillsApi.Models.AccountBalance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("GroupID");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__AccountB__3214EC07092CD002");

                    b.HasIndex("GroupId");

                    b.ToTable("AccountBalance", (string)null);
                });

            modelBuilder.Entity("BillsApi.Models.BalanceMonitor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("BalanceMonitor", (string)null);
                });

            modelBuilder.Entity("BillsApi.Models.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("smallmoney");

                    b.Property<string>("CalendarEventId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ConfigurationId")
                        .HasColumnType("int")
                        .HasColumnName("ConfigurationID");

                    b.Property<DateOnly?>("DueDate")
                        .HasColumnType("date");

                    b.Property<short?>("PayEarly")
                        .HasColumnType("smallint");

                    b.Property<bool?>("Payed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("ReminderId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TaskId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime");

                    b.Property<bool>("Valid")
                        .HasColumnType("bit");

                    b.HasKey("Id")
                        .HasName("PK__Bills__3214EC07F83B15FB");

                    b.HasIndex("ConfigurationId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("BillsApi.Models.BillConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("DefaultAmount")
                        .HasColumnType("smallmoney");

                    b.Property<short?>("DefaultPayEarly")
                        .HasColumnType("smallint");

                    b.Property<string>("DefaultTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("GroupID");

                    b.Property<int?>("MonthlyDueDate")
                        .HasColumnType("int");

                    b.Property<string>("TransactionRegex")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Website")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("BillConfigurations");
                });

            modelBuilder.Entity("BillsApi.Models.DailyAllowance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Allowance")
                        .HasColumnType("money");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("GroupID");

                    b.HasKey("Id")
                        .HasName("PK__DailyAll__3214EC078F068AC8");

                    b.HasIndex("GroupId");

                    b.ToTable("DailyAllowance", (string)null);
                });

            modelBuilder.Entity("BillsApi.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("BillsApi.Models.Income", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<int?>("Frequency")
                        .HasColumnType("int");

                    b.Property<string>("SearchString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id")
                        .HasName("PK__Income__3214EC07ED3D60D2");

                    b.HasIndex("UserId");

                    b.ToTable("Income", (string)null);
                });

            modelBuilder.Entity("BillsApi.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Deposit")
                        .HasColumnType("money");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("GroupID");

                    b.Property<string>("Status")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<decimal?>("Withdrawal")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("BillsApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("GroupID");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__tmp_ms_x__3214EC0782CF78EA");

                    b.HasIndex("GroupId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BillsApi.Models.AccountBalance", b =>
                {
                    b.HasOne("BillsApi.Models.Group", "Group")
                        .WithMany("AccountBalances")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("FK_AccountBalance_Groups");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("BillsApi.Models.Bill", b =>
                {
                    b.HasOne("BillsApi.Models.BillConfiguration", "Configuration")
                        .WithMany("Bills")
                        .HasForeignKey("ConfigurationId")
                        .IsRequired()
                        .HasConstraintName("FK_Bills_BillConfigurations");

                    b.Navigation("Configuration");
                });

            modelBuilder.Entity("BillsApi.Models.BillConfiguration", b =>
                {
                    b.HasOne("BillsApi.Models.Group", "Group")
                        .WithMany("BillConfigurations")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_BillConfigurations_Groups");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("BillsApi.Models.DailyAllowance", b =>
                {
                    b.HasOne("BillsApi.Models.Group", "Group")
                        .WithMany("DailyAllowances")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("FK_DailyAllowance_Groups");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("BillsApi.Models.Income", b =>
                {
                    b.HasOne("BillsApi.Models.User", "User")
                        .WithMany("Incomes")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Income_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BillsApi.Models.Transaction", b =>
                {
                    b.HasOne("BillsApi.Models.Group", "Group")
                        .WithMany("Transactions")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("FK_Transactions_Groups");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("BillsApi.Models.User", b =>
                {
                    b.HasOne("BillsApi.Models.Group", "Group")
                        .WithMany("Users")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("GroupId");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("BillsApi.Models.BillConfiguration", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("BillsApi.Models.Group", b =>
                {
                    b.Navigation("AccountBalances");

                    b.Navigation("BillConfigurations");

                    b.Navigation("DailyAllowances");

                    b.Navigation("Transactions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("BillsApi.Models.User", b =>
                {
                    b.Navigation("Incomes");
                });
#pragma warning restore 612, 618
        }
    }
}
